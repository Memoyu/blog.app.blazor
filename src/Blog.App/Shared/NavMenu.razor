@inject NavigationManager navigationManager
@inject NavHelper NavHelper
@*
    @{
    var nav = NavHelper.Navs.FirstOrDefault(n => n.Href is not null && navigationManager.Uri.Contains(n.Href));
    NavHelper.Active(nav);
    }*@

<header class="b-nav-menu">
    <MContainer Class="d-md-flex">
        <div class="text-md-start text-center me-md-auto">
            <a class="b-nav-menu-title" onclick=@(()=>NavHelper.NavigateTo("/"))>Memoyu</a>
            <div class="b-nav-menu-desc">知行合一</div>
        </div>

        <div style="display: flex; flex-direction: column; justify-content: center;">
            <div class="b-nav-menu-items">
                @foreach (var nav in GetNavs())
                {
                    <MButton Text Color="primary" OnClick="()=>NavHelper.NavigateTo(nav)" IsActive=@nav.Active Class="mx-2 font-weight-medium">
                        @nav.Title
                    </MButton>
                }
                <MRow Dense>
                    <MCol Align="AlignTypes.Center">
                        <MButton Icon Color="black" Href="https://github.com/Memoyu" Target="_blank">
                            <MIcon>mdi-github</MIcon>
                        </MButton>
                    </MCol>
                    <MCol>
                        <MButton Icon Color="green">
                            <MIcon>mdi-wechat</MIcon>
                        </MButton>
                    </MCol>
                </MRow>
            </div>
        </div>
    </MContainer>
</header>

@code {
    protected override void OnInitialized()
    {
        var nav = NavHelper.Navs.FirstOrDefault(n => n.Href is not null && navigationManager.Uri.Contains(n.Href));
        NavHelper.Active(nav);
    }

    List<NavModel> GetNavs()
    {
        return NavHelper.Navs;
    }
}
